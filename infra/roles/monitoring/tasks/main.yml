---
- name: Update apt cache
  apt:
    update_cache: yes

- name: Install required packages
  apt:
    name:
      - wget
      - tar
      - curl
      - adduser
      - libfontconfig1
    state: present

# Prometheus Installation
- name: Create prometheus group
  group:
    name: "{{ prometheus_group }}"
    state: present

- name: Create prometheus user
  user:
    name: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    system: yes
    shell: /bin/false
    home: "{{ prometheus_data_dir }}"
    createhome: no

- name: Create prometheus directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: '0755'
  loop:
    - "{{ prometheus_data_dir }}"
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_log_dir }}"
    - "/opt/prometheus"

- name: Download Prometheus
  get_url:
    url: "{{ prometheus_download_url }}"
    dest: "/tmp/prometheus-{{ prometheus_version }}.tar.gz"
    mode: '0644'

- name: Extract Prometheus
  unarchive:
    src: "/tmp/prometheus-{{ prometheus_version }}.tar.gz"
    dest: "/tmp"
    remote_src: yes
    creates: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64"

- name: Copy Prometheus binaries
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    owner: root
    group: root
    mode: '0755'
    remote_src: yes
  loop:
    - prometheus
    - promtool

- name: Copy Prometheus console files
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
    dest: "{{ prometheus_config_dir }}/{{ item }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: '0644'
    remote_src: yes
  loop:
    - consoles
    - console_libraries

- name: Generate Prometheus configuration
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: '0644'
  notify: restart prometheus

- name: Create Prometheus systemd service
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    mode: '0644'
  notify: restart prometheus

# Grafana Installation
- name: Create grafana group
  group:
    name: "{{ grafana_group }}"
    state: present

- name: Create grafana user
  user:
    name: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    system: yes
    shell: /bin/false
    home: "{{ grafana_data_dir }}"
    createhome: no

- name: Create grafana directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    mode: '0755'
  loop:
    - "{{ grafana_data_dir }}"
    - "{{ grafana_config_dir }}"
    - "{{ grafana_log_dir }}"
    - "/opt/grafana"

- name: Download Grafana
  get_url:
    url: "{{ grafana_download_url }}"
    dest: "/tmp/grafana-{{ grafana_version }}.tar.gz"
    mode: '0644'

- name: Extract Grafana
  unarchive:
    src: "/tmp/grafana-{{ grafana_version }}.tar.gz"
    dest: "/opt/grafana"
    remote_src: yes
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    extra_opts:
      - --strip-components=1

- name: Generate Grafana configuration
  template:
    src: grafana.ini.j2
    dest: "{{ grafana_config_dir }}/grafana.ini"
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    mode: '0644'
  notify: restart grafana

- name: Create Grafana provisioning directories
  file:
    path: "{{ grafana_config_dir }}/provisioning/{{ item }}"
    state: directory
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    mode: '0755'
  loop:
    - datasources
    - dashboards

- name: Create Prometheus datasource configuration
  template:
    src: provisioning/datasources/prometheus.yml.j2
    dest: "{{ grafana_config_dir }}/provisioning/datasources/prometheus.yml"
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    mode: '0644'
  notify: restart grafana

- name: Create dashboard provider configuration
  template:
    src: provisioning/dashboards/dashboard-provider.yml.j2
    dest: "{{ grafana_config_dir }}/provisioning/dashboards/dashboard.yml"
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    mode: '0644'
  notify: restart grafana

- name: Create system monitoring dashboard
  template:
    src: provisioning/dashboards/system-monitoring.json.j2
    dest: "{{ grafana_config_dir }}/provisioning/dashboards/system-monitoring.json"
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    mode: '0644'
  notify: restart grafana

- name: Create Grafana systemd service
  template:
    src: grafana.service.j2
    dest: /etc/systemd/system/grafana-server.service
    mode: '0644'
  notify: restart grafana

# Firewall Configuration
- name: Allow Prometheus port
  ufw:
    rule: allow
    port: "{{ prometheus_port }}"
    proto: tcp
    comment: "Prometheus"

- name: Allow Grafana port
  ufw:
    rule: allow
    port: "{{ grafana_port }}"
    proto: tcp
    comment: "Grafana"

# Service Management
- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

- name: Enable and start Prometheus
  systemd:
    name: prometheus
    enabled: yes
    state: started

- name: Enable and start Grafana
  systemd:
    name: grafana-server
    enabled: yes
    state: started

- name: Clean up downloaded files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/tmp/prometheus-{{ prometheus_version }}.tar.gz"
    - "/tmp/prometheus-{{ prometheus_version }}.linux-amd64"
    - "/tmp/grafana-{{ grafana_version }}.tar.gz"