# Upstream backend servers
upstream backend {
    least_conn;
{% for host in groups['api_servers'] %}
    server {{ hostvars[host]['ansible_host'] }}:8081 max_fails=3 fail_timeout=30s;
{% endfor %}
    keepalive 32;
}

# HTTP server (initial setup for certbot)
server {
    listen 80;
    server_name {{ domain_name }};

    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        try_files $uri =404;
    }

    location /api/bookings {
        if ($http_user_agent = "HackLoad-Monitor/1.0") {
            add_header Content-Type application/json;
            return 401 '{}';
        }
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_next_upstream           error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries     2;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;
    }

    # Proxy configuration for other requests
    location / {
        if ($http_user_agent = "HackLoad-Monitor/1.0") {
            add_header Content-Type application/json;
            return 200 '[]';
        }

        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}